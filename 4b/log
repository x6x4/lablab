==551741== Memcheck, a memory error detector
==551741== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==551741== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==551741== Command: ./timing.bin
==551741== 
==551741== Invalid read of size 8
==551741==    at 0x109713: free_infolist (lib_bt.c:187)
==551741==    by 0x1097C5: free_vertex (lib_bt.c:178)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:723)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:721)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:719)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:719)
==551741==    by 0x10C0BE: timing_tree (timing.c:44)
==551741==    by 0x10917A: main (timing.c:7)
==551741==  Address 0x4a4eff0 is 0 bytes inside a block of size 24 free'd
==551741==    at 0x484317B: free (vg_replace_malloc.c:872)
==551741==    by 0x109771: free_infolist (lib_bt.c:191)
==551741==    by 0x10B2B7: delete_bt (lib_bt_func.c:321)
==551741==    by 0x10BF50: timing_deletion (timing.c:81)
==551741==    by 0x10C0B2: timing_tree (timing.c:41)
==551741==    by 0x10917A: main (timing.c:7)
==551741==  Block was alloc'd at
==551741==    at 0x48455EF: calloc (vg_replace_malloc.c:1328)
==551741==    by 0x1095E7: new_infolist (lib_bt.c:151)
==551741==    by 0x1096A7: branch_ext (lib_bt.c:14)
==551741==    by 0x10A6F8: insert_bt (lib_bt_func.c:30)
==551741==    by 0x10BEE1: timing_insertion (timing.c:69)
==551741==    by 0x10C0A4: timing_tree (timing.c:40)
==551741==    by 0x10917A: main (timing.c:7)
==551741== 
==551741== Invalid read of size 1
==551741==    at 0x4846782: strlen (vg_replace_strmem.c:494)
==551741==    by 0x48E0833: puts (ioputs.c:35)
==551741==    by 0x10971A: free_infolist (lib_bt.c:187)
==551741==    by 0x1097C5: free_vertex (lib_bt.c:178)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:723)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:721)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:719)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:719)
==551741==    by 0x10C0BE: timing_tree (timing.c:44)
==551741==    by 0x10917A: main (timing.c:7)
==551741==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==551741== 
==551741== 
==551741== Process terminating with default action of signal 11 (SIGSEGV)
==551741==  Access not within mapped region at address 0x0
==551741==    at 0x4846782: strlen (vg_replace_strmem.c:494)
==551741==    by 0x48E0833: puts (ioputs.c:35)
==551741==    by 0x10971A: free_infolist (lib_bt.c:187)
==551741==    by 0x1097C5: free_vertex (lib_bt.c:178)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:723)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:721)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:719)
==551741==    by 0x10B437: free_bt (lib_bt_func.c:719)
==551741==    by 0x10C0BE: timing_tree (timing.c:44)
==551741==    by 0x10917A: main (timing.c:7)
==551741==  If you believe this happened as a result of a stack
==551741==  overflow in your program's main thread (unlikely but
==551741==  possible), you can try to increase the size of the
==551741==  main thread stack using the --main-stacksize= flag.
==551741==  The main thread stack size used in this run was 8388608.
==551741== 
==551741== HEAP SUMMARY:
==551741==     in use at exit: 2,292 bytes in 47 blocks
==551741==   total heap usage: 100 allocs, 53 frees, 3,986 bytes allocated
==551741== 
==551741== LEAK SUMMARY:
==551741==    definitely lost: 0 bytes in 0 blocks
==551741==    indirectly lost: 0 bytes in 0 blocks
==551741==      possibly lost: 0 bytes in 0 blocks
==551741==    still reachable: 2,292 bytes in 47 blocks
==551741==         suppressed: 0 bytes in 0 blocks
==551741== Reachable blocks (those to which a pointer was found) are not shown.
==551741== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==551741== 
==551741== For lists of detected and suppressed errors, rerun with: -s
==551741== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
